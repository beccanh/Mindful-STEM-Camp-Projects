import speech_recognition as sr

def recognize_speech_from_mic(recognizer, microphone, language="en-US"):
    """
    Transcribe speech from recorded from `microphone` in the specified `language`.

    Returns a dictionary with three keys:
    "success": a boolean indicating whether the API request was successful
    "error":   `None` if no error occurred, otherwise a string containing
                an error message if the API could not be reached or
                speech was unrecognizable
    "transcription": `None` if speech could not be transcribed,
                otherwise a string containing the transcribed text
    """
    # check that recognizer and microphone arguments are appropriate type
    if not isinstance(recognizer, sr.Recognizer):
        raise TypeError("`recognizer` must be `Recognizer` instance")
    if not isinstance(microphone, sr.Microphone):
        raise TypeError("`microphone` must be `Microphone` instance")

    # adjust the recognizer sensitivity to ambient noise and record audio
    with microphone as source:
        recognizer.adjust_for_ambient_noise(source)
        print("Listening...")
        audio = recognizer.listen(source)

    # initialize response
    response = {
        "success": True,
        "error": None,
        "transcription": None
    }

    # try recognizing the speech in the recording
    try:
        response["transcription"] = recognizer.recognize_google(audio, language=language)
    except sr.RequestError:
        # API was unreachable or unresponsive
        response["success"] = False
        response["error"] = "API unavailable"
    except sr.UnknownValueError:
        # speech was unintelligible
        response["error"] = "Unable to recognize speech"

    return response

if __name__ == "__main__":
    recognizer = sr.Recognizer()
    microphone = sr.Microphone()

    # Define a dictionary of languages to choose from
    languages = {
        "1": "en-US",  # English (United States)
        "2": "en-GB",  # English (United Kingdom)
        "3": "es-ES",  # Spanish (Spain)
        "4": "fr-FR",  # French (France)
        "5": "de-DE"   # German (Germany)
        # Add more languages and accents as needed
    }

    # Prompt the user to choose a language
    print("Please choose a language:")
    for key, value in languages.items():
        print(f"{key}: {value}")
    choice = input("Enter the number corresponding to your choice: ")

    # Set the chosen language
    language = languages.get(choice, "en-US")

    print(f"Using language: {language}")

    print("Say something!")

    # call the recognize_speech_from_mic function and store the response
    response = recognize_speech_from_mic(recognizer, microphone, language=language)

    # if a transcription was returned, print it
    if response["transcription"]:
        print("You said: {}".format(response["transcription"]))
    # if no transcription was returned, print an error message
    else:
        print("I didn't catch that. What did you say?\n")

    # print the transcription and error (if any)
    print("Transcription: {}".format(response["transcription"]))
    print("Error: {}".format(response["error"]))

